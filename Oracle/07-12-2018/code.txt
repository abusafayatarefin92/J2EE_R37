Using the Case Expression
select last_name, job_id, salary,
 case job_id when 'IT_PROG' then 1.10 * salary
  when 'IT_PROG' then 1.15 * salary
  when 'IT_PROG' then 1.20 * salary
 else salary end "revised_salary"
from employees;
select last_name, salary,
 (case when salary < 5000 then 'LOW'
       when salary < 10000 then 'MEDIUM'
       when salary < 20000 then 'GOOD'
       else 'EXCELLENT'
 end)qualified_salary
from employees;
Using the Decode Function
select last_name, job_id, salary,
 decode (job_id, 'IT_PROG', 1.10 * salary,
   'ST_CLERK', 1.15 * salary,
   'SA_REP', 1.20 * salary, 
  salary)
 "revised_salary"
from employees;
select last_name, salary,
       decode(trunc(salary / 2000, 0),
                        0, 0.00,
                        1, 0.09,
                        2, 0.20,
                        3, 0.30,
                        4, 0.40,
                        5, 0.42,
                        6, 0.44,
                           0.45) tax_rate
from employees
where department_id = 80;
Using the Avg and Sum Functions
select round(avg(salary)), max(salary),
       min(salary), sum(salary)
from employees
where job_id like '%REP%';
Using the Min and Max Functions
select min(hire_date), max(hire_date)
from employees;
select min(last_name), max(last_name)
from employees;
Using the Count function
select count(*)
from employees
where department_id = 50;
select count(commission_pct)
from employees
where department_id = 80;
Group Functions and Null Values
select avg(commission_pct)
from employees;
select avg(nvl(commission_pct, 0))
from employees;
Using the Group by Clause
select department_id, avg(salary)
from employees
group by department_id;
select avg(salary)
from employees
group by department_id;
select department_id, avg(salary)
from employees
group by department_id
order by avg(salary);
Using the Group by Clause on Multiple Columns
select department_id dept_id, job_id, sum(salary)
from employees
group by department_id, job_id;