1.	Which operator can be used as an alternative of conditional statement?
Answer. Ternary operator can be used as an alternative of conditional statement. Ternary operator combine three expressions into one. Most commonly used to 
	create a shorthand expression for conditional statements, The only ternary operator in JavaScript is ?:. For example:
	if(a == b){
		c = "Ok!";
	}else{
		c = "Not Ok!";
	}
	This conditional statement can be written as follows:
	a == b ? c = "Ok!" : c = "Not Ok!";
2.	What are the three basic structure of JavaScript?
Answer. The three basic structure of JavaScript are:
	i. 	 Sequences;
	ii.  Branches;
	iii. Loops;
3.	What are the three categories of operators? 
Answer. The three categories of operators are:
	i.   binary;
	ii.  unary;
	iii. ternary.
	Binary operators, most commonly associated with the concept of operator, take two expressions and combine them into a third complex or compound expression.
	The divide (/) operator and the plus (+) operator are binary operators.
	Unary operators work on a single variable or literal. All negative numbers are assigned using a unary operator. Unary operators include increment or
	decrement operators (++ and --).
	Ternary operators combine three expressions into one. Most commonly used to create a shorthand expression for conditional statements. The only ternary 
	operator in JavaScript is ?:.
4.	Which loop checks the condition at the end of the statement?
Answer. The do/while loop checks the condition at the end of the statement. 
	Syntex: 
	do{
		Statements
		counter increment/decrement
	}while(condition);
5.	What are the three parts of for loop?
Answer. The three parts of for loop are: 
	i.   start value or initial value;
	ii.  condition;
	iii. increment/decrement;
	Syntex:
	for(initial value; condition; increment/decrement){
		Statements;
	}
6.	Where return statement is used?
Answer. Return statement is used as part of a function. The role of return statement is to provide the value of the expressions within the function. 
	For example:
	function returnMessage(){
		var part1 = "Good";
		var part2 = "Morning!";
		var wholeThing = part1 + " " + part2;
		return wholeThing
	}
	returnMessage();
	The Output will be: Good Morning!
7.	What is the benefit of using with statement?
Answer. The with statement is a shortcut. Because, using the with statement, we can specify the object name once and then follow it with all the properties and 
	their values. For example:
	function showEm(){
		with(document.customer){
			var a = fname.value;
			var b = lname.value;
			var c = address.value;
			var d = city.value;
			var e = state.value;
		}
		var fullName = a + " " + b + "\n";
		var livesHere = c + "\n" + d + ", " + e;
		var f = fullName + livesHere;
		return f;
	}
	showEm();
	The output will be: 
	Abc Def
	Dhanmondi
	Dhaka, Bangladesh
8.	How can you fire a function?
Answer. Event handlers launch a JavaScript function.
9.	What are the three main event categories?
Answer. The three main event categories are:
	i.   Keyboard and mouse events;
	ii.  Load events;
	iii. Form-related events.
10.	How function constructor and function literals are declared?
Answer. The Function() constructor looks like the new object or array constructor. It has this general format:
	var variableName = new Function("exp1","exp2","return exp3");
	Here, exp1 is a necessary first expression, exp2 is an optional secomd expression, and exp3 is an expression made of exp1 and exp2.
	Function literal look more like function statements, in that use curly braces. However, like the Function() constructor, they have no unique name of their 
	own for purpose of reference. Their general format is:
	var variableName + new function(arg1,arg2){return exp1};
11. Show the hierarchy of HTML form.
Answer. In JavaScript, to reference the hierarchy, the dor(.) operator serves as a linking device for the different levels in the object hierarchy, with the
	highest level begining on the left and working its way to the right. In JavaScript, a form object would look like the following:
	window.document.formName.elementName.value
12. What do you understand by prototype concept in JavaScript?
Answer. In JavaScript , the concept of class revolves around the concept of a prototype. Unlike the set concept of class that treats an instance of an object
	to be a member of the class, the prototype concept treats the named object with all of the properties that all members of the class have.
13. Why object-oriented programming is essential in JavaScript?
Answer. In JavaScript object-oriented programming is essential because, we can write a complex piece of code as a module (It is a program units, which can be
	shared with others on a programming team and can be reused), the next time the same code is required, we can either make small changes to the module(such
	as different arguments values) or use the same module elsewhere in the script. By doing so, the time spent on the original code design pays off in the 
	long run.
14. What is Document Object Model (DOM)?
Answer. In the JavaScript document object model (DOM), the primary document is an HTML page. The document object contains the properties whose information
	is used by JavaScript. JavaScript DOM is sum total of the document object's properties and methods, including the arrays automatically generated on an HTML
	page, and the manner in which these objects are accessed by JavaScript.
15. What is the benefit of preloading image?
Answer. When designing a page one grapic replaces another, the image swapping should be immediate, and the viewer should not require to wait while the new 
	image loads. In JavaScript preloading image solved the problem. For this we have to place a new image in the browser's cache as following:
	var sampleImage = new Image();
	sampleImage.src = "abc.jpg";
16. What are the functions of open and close method?
Answer. 
17. What are the events in HTML and JavaScript?
Answer. The events in HTML and JavaScript are:
	i.   Mouse events;
	ii.  Key events;
	iii. Form events;
	iv.  Page/window/image events.
18. What are the three crossbrowser methods of history object?
Answer. The history object is a property of window object. It has single crossbrowser property, length, and three crossbrowser methods, they are:
	i.   back();
	ii.  forward();
	iii. go(n)
	Depending on the order of the pages were visited, we can specify back() or forward(). The history.go(n) method uses positive values to go to a forward 
	reference and negative numbers to go to a backward reference.
19. What are the two methods of location objects?
Answer. The location object has two methods, they are:
	i.  reload();
	ii. replace()
	The reload() method acts like just the Reload button on a browser. However, the replace() method acts more like the location object itself.	
